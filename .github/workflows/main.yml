name: Deploy to Azure

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:  # Optional: Test changes in PRs
    branches:
      - main


#Provision API resource, build container from dockerfile, push to dockerhub and pull it again in the container.
jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/beesafeapi:latest ./app

      - name: Push Docker Image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/beesafeapi:latest

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: build-and-push  # Depends on the previous job

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Container to Azure
        run: |
          az containerapp create \
            --name beesafe-api \
            --resource-group Beesafe \
            --environment caer0937870Terraform \
            --image ${{ secrets.DOCKER_USERNAME }}/beesafeapi:latest \
            --cpu 0.5 \
            --memory 1.0Gi \
            --registry-server docker.io \
#            --env-vars DATABASE_URL=${{ secrets.AZURE_DATABASE_URL }}

  # db-setup:
  #   name: Setup Database
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Set Up Database
  #       run: |
  #         mysql -h ${DB_HOST} -u ${DB_USER} -p${DB_PASS} < ./database/schema.sql
  #       env:
  #         DB_HOST: ${{ secrets.AZURE_SQL_SERVER }} 
  #         DB_USER: ${{ secrets.AZURE_SQL_USER }}
  #         DB_PASS: ${{ secrets.AZURE_SQL_PASSWORD }}
